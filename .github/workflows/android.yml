name: Android CI
run-name: ${{ github.actor }} started the Android CI workflow

on:
    push:
        branches:
            - main
            - develop
            - feature/**
            - bugfix/**
            - release/**

    pull_request:
        branches:
            - main
            - develop
            - release/**

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout project code
                uses: actions/checkout@v4

            -   name: Set up JDK 17
                uses: actions/setup-java@v4
                with:
                    java-version: '17'
                    distribution: 'adopt'
                    cache: 'gradle'

            -   name: Grant execute permissions for gradlew
                run: chmod +x ./gradlew

            -   name: Prepare release signing configuration
                env:
                    ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
                    RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
                    RELEASE_KEY_ALIAS: ${{ secrets.RELEASE_KEY_ALIAS }}
                    RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

                run: |
                    pwd
                    
                    # Base64 decoding of keystore kept in temporary environment variable
                    echo $ENCODED_STRING > keystore-b64.txt
                    base64 -d keystore-b64.txt > keystore.jks
                    
                    # Create property file with signing configuration values
                    echo "keystorePath=../keystore.jks" > keystore.properties
                    echo "keystorePassword=$RELEASE_KEYSTORE_PASSWORD" >> keystore.properties
                    echo "keyAlias=$RELEASE_KEY_ALIAS" >> keystore.properties
                    echo "keyPassword=$RELEASE_KEY_PASSWORD" >> keystore.properties

            -   name: Build with Gradle
                run: ./gradlew build

            -   name: Run tests
                run: ./gradlew test

            -   name: Create APK release
                run: ./gradlew assembleRelease

            -   name: Upload APK to release artifacts
                uses: actions/upload-artifact@v4
                with:
                    name: photopixels-release-apk
                    path: ${{ steps.releaseApk.outputs.apkfile }}
                    if-no-files-found: error # error, warn, ignore
                    overwrite: false

            -   name: Publish via Firebase AppDistribution
                run: echo "TODO"

    mytestjob:
        runs-on: ubuntu-latest
